@model SampleTracking.user

@{
    ViewBag.Title = "Roles";
   
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>UserRoles</title>
    <script type="text/javascript" src="~/Content/js/jquery.min.js"></script>
    <script src="~/Scripts/angular.min.js"></script>
    <script type="text/javascript">

    var app = angular.module('myApp', []);
    app.controller('myCtrl', function ($scope, $http,$window) {
    
        $scope.roles = [];
        $scope.UserId = angular.element('#User_Id').val();
        $scope.loadrole = [];
        $scope.LoadRoles = function () {
            $scope.loadrole = [];
            $scope.roles = [];
            $http({
                method: 'GET',
                url: '/api/Roles'
            }).then(function successCallback(response) {
                console.log(response.data);
                $scope.roles = response.data;
                            $http({
                                     method: 'GET',
                                     url: '/api/UserManage/' + $scope.UserId
                            }).then(function successCallback1(response1) {
                                     // this callback will be called asynchronously
                                     // when the response is available
                                console.log(response1);
                                var locroles = response1.data.roles;
                                for (var i = 0; i < locroles.length; i++) {
                                    $scope.loadrole.push(locroles[i].Id);
                                }
                                console.log($scope.loadrole);
                                for (var i = 0; i < $scope.roles.length; i++) {
                                    console.log($scope.loadrole.indexOf($scope.roles[i].Id));
                                    if ($scope.loadrole.indexOf($scope.roles[i].Id) !== -1)
                                      $scope.roles[i].selected = true;
                                  else
                                      $scope.roles[i].selected = false;

                                }
                                 }, function errorCallback1(response1) {
                                     // called asynchronously if an error occurs
                                     // or server returns response with an error status.
                                     console.log(response1);
                                $scope.status = "Error";
                                 });
            }, function errorCallback(response) {
                // called asynchronously if an error occurs
                // or server returns response with an error status.
                console.log(response);
                $scope.status = "Error";
            });
        };
        $scope.LoadRoles();
        $scope.diff = function(a1, a2) {

            var a = [], diff = [];
            var i=0;
            var j=0;
            for ( i = 0; i < a1.length; i++) {

                for (j = 0; j < a2.length; j++) {
                    if (a1[i] == a2[j]) {
                        break;
                    }
                }
                if (j == a2.length) {
                    diff.push(a1[i]);
                }
            }


            return diff;
        };
        $scope.SaveRole = function () {
            var selectedRole = [];
            for (var i = 0; i < $scope.roles.length; i++) {
                console.log(i + " : " + $scope.roles[i].selected);
                if ($scope.roles[i].selected) {
                    selectedRole.push($scope.roles[i].Id);
                }
            }

          //  console.log('first');
            var urole = { "Id": parseInt($scope.UserId), "AddRole": $scope.diff(selectedRole, $scope.loadrole), "RemRole": $scope.diff($scope.loadrole, selectedRole) };
         //   console.log($scope.diff($scope.loadperm, selectedPerm));//Removed

            console.log(urole);
            //console.log($scope.diff(selectedPerm, $scope.loadperm));//Added
            $http({
                method: 'POST',
                url: '/api/UserManage/EditRole',
                data: JSON.stringify(urole)
            }).then(function successCallback(response) {
                // this callback will be called asynchronously
                // when the response is available
                console.log(response);
            }, function errorCallback(response) {
                // called asynchronously if an error occurs
                // or server returns response with an error status.
                console.log(response);
                $scope.status = "Error";
            });
            $scope.LoadRoles();
        };
         });
    </script>
</head>
<body ng-app="myApp" ng-controller="myCtrl">
    <div>

        @Html.HiddenFor(model => model.User_Id)
        <h4>user</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Username)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Username)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.SystemUserId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.SystemUserId)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MiddleName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MiddleName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Email)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Email)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Inactive)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Inactive)
            </dd>

        </dl>
    </div>
    <div ng-repeat="role in roles">

        <div><input type="checkbox" ng-model="role.selected" />{{role.Id}} : {{role.RoleName}} : {{role.RoleDescription}}</div>

    </div>
    <button ng-click="SaveRole()">Save Roles</button><br />

    <p>
      
        @Html.ActionLink("Back to List", "Index","AppUser")
    </p>
</body>
</html>
